# klientdialog_ui.rb --
#
# UI generated by GUI Builder Build 146 on 2009-05-18 20:43:56 from:
#    /home/che/Desktop/Video/klientdialog.ui
# THIS IS AN AUTOGENERATED FILE AND SHOULD NOT BE EDITED.
# The associated callback file should be modified instead.
#

# Use UTF-8 encoding
$KCODE = 'U'

require 'tk'


class Klientdialog_ui
  def initialize(root, client, mode, parent)
    @root = root
    @client = client
    @parent = parent

    if(client)
      puts "modyfing "+client.Imie
    end

    # Widget Initialization
    @_label_1 = TkLabel.new(@root )
    
    if mode == "modify"
      @_label_1.text("Modyfikacja klienta")
    elsif mode == "delete"
      @_label_1.text("Czy na pewno chcesz usunać tego klienta z bazy?")
    else
      @_label_1.text("Dodawanie klienta")
    end   

    @_entry_1 = TkEntry.new(@root,
      'width' => 0
    )
    @_entry_2 = TkEntry.new(@root,
      'width' => 0
    )
    @_entry_3 = TkEntry.new(@root,
      'width' => 0
    )
    @_entry_4 = TkEntry.new(@root,
      'width' => 0
    )
    @_entry_5 = TkEntry.new(@root,
      'width' => 0,
      'show' => "*"
    )
    if(not mode == "delete")

      @_entry_6 = TkEntry.new(@root,
      'width' => 0,
      'show' => "*"
      )
    end

    @_button_1 = TkButton.new(@root,
      'text' => "OK"
    )
    @_button_2 = TkButton.new(@root,
      'text' => "Anuluj"
    )
    @_label_2 = TkLabel.new(@root,
      'text' => "Imię"
    )
    @_label_3 = TkLabel.new(@root,
      'text' => "Nazwisko"
    )
    @_label_4 = TkLabel.new(@root,
      'text' => "Adres"
    )
    @_label_5 = TkLabel.new(@root,
      'text' => "Login"
    )
    if( not mode == "delete")
      
      @_label_6 = TkLabel.new(@root,
      'text' => "Nowe hasło"
      )

      @_label_7 = TkLabel.new(@root,
      'text' => "Powtórz hasło"
      )
    end
    if not mode == "add"

      @_entry_1.set(@client.Imie)
      @_entry_2.set(@client.Nazwisko)
      @_entry_3.set(@client.Adres)
      @_entry_4.set(@client.Login)
     
    end

    
    if mode == "delete"
      @_entry_1.configure( 'state'=> "readonly")
      @_entry_2.configure( 'state'=> "readonly")
      @_entry_3.configure( 'state'=> "readonly")
      @_entry_4.configure( 'state'=> "readonly")
      @_entry_5.configure( 'state'=> "readonly")    
    
    end
     
    # widget commands

    @_entry_1.configure(
      'invalidcommand' => lambda {  }
    )
    @_entry_1.configure(
      'validatecommand' => lambda { }
    )
    @_entry_1.configure(
      'xscrollcommand' => lambda {  }
    )
    @_entry_2.configure(
      'invalidcommand' => lambda {  }
    )
    @_entry_2.configure(
      'validatecommand' => lambda {  }
    )
    @_entry_2.configure(
      'xscrollcommand' => lambda {  }
    )
    @_entry_3.configure(
      'invalidcommand' => lambda {  }
    )
    @_entry_3.configure(
      'validatecommand' => lambda { }
    )
    @_entry_3.configure(
      'xscrollcommand' => lambda {  }
    )
    @_entry_4.configure(
      'invalidcommand' => lambda {  }
    )
    @_entry_4.configure(
      'validatecommand' => lambda { }
    )
    @_entry_4.configure(
      'xscrollcommand' => lambda {  }
    )
    @_entry_5.configure(
      'invalidcommand' => lambda {  }
    )
    @_entry_5.configure(
      'validatecommand' => lambda {  }
    )
    @_entry_5.configure(
      'xscrollcommand' => lambda {  }
    )

    if( not mode == "delete")

      @_entry_6.configure(
        'invalidcommand' => lambda {  }
      )
      @_entry_6.configure(
        'validatecommand' => lambda { }
      )
      @_entry_6.configure(
        'xscrollcommand' => lambda {  }
      )
    end

    @_button_1.configure(
      'command' => lambda {
                           
                           da = DataAccess.getInstance()

                           if(mode == "delete")
                             da.removeClient(@client)
                             @parent.refresh()
                             @root.destroy

                           else
                             
                             newPassword = nil
                             
                             password1 = @_entry_6.value

                             if(password1.empty? and mode =="add")
                               Tk::messageBox :message => 'Pole Nowe hasło jest puste'
                               return
                             end

                             if(not password1.empty?)

                               password2 = @_entry_6.value
                               if not  password2 == password1
                                 Tk::messageBox :message => 'Podane hasła się nie zgadzają'
                                 return
                               end

                                 newPassword = password1
                             end
                             
                             if(mode == "add")
                               @client = Klient.new
                             end
                             
                             @client.Imie = @_entry_1.value()
                             @client.Nazwisko = @_entry_2.value()
                             @client.Adres = @_entry_3.value()
                             @client.Login = @_entry_4.value()
                             if newPassword
                               @client.Haslo = newPassword
                             
                             end
                             
                             da.updateClient(@client)
                             
                             @parent.refresh()
                             @root.destroy

                           end
                         }
    )
    @_button_2.configure(
      'command' => lambda {

                           @root.destroy
                         }
    )


    # Geometry Management
    @_label_1.grid(
      'in'     => @root,
      'column' => 3,
      'row'    => 1,
      'columnspan' => 2,
      'ipadx' => 0,
      'ipady' => 0,
      'padx' => 0,
      'pady' => 0,
      'rowspan' => 1,
      'sticky' => ""
    )
    @_entry_1.grid(
      'in'     => @root,
      'column' => 3,
      'row'    => 2,
      'columnspan' => 2,
      'ipadx' => 0,
      'ipady' => 0,
      'padx' => 0,
      'pady' => 0,
      'rowspan' => 1,
      'sticky' => "ew"
    )
    @_entry_2.grid(
      'in'     => @root,
      'column' => 3,
      'row'    => 3,
      'columnspan' => 2,
      'ipadx' => 0,
      'ipady' => 0,
      'padx' => 0,
      'pady' => 0,
      'rowspan' => 1,
      'sticky' => "ew"
    )
    @_entry_3.grid(
      'in'     => @root,
      'column' => 3,
      'row'    => 4,
      'columnspan' => 2,
      'ipadx' => 0,
      'ipady' => 0,
      'padx' => 0,
      'pady' => 0,
      'rowspan' => 1,
      'sticky' => "ew"
    )
    @_entry_4.grid(
      'in'     => @root,
      'column' => 3,
      'row'    => 5,
      'columnspan' => 2,
      'ipadx' => 0,
      'ipady' => 0,
      'padx' => 0,
      'pady' => 0,
      'rowspan' => 1,
      'sticky' => "ew"
    )
    @_entry_5.grid(
      'in'     => @root,
      'column' => 3,
      'row'    => 6,
      'columnspan' => 2,
      'ipadx' => 0,
      'ipady' => 0,
      'padx' => 0,
      'pady' => 0,
      'rowspan' => 1,
      'sticky' => "ew"
    )
    if(not mode == "delete")

    @_entry_6.grid(
      'in'     => @root,
      'column' => 3,
      'row'    => 7,
      'columnspan' => 2,
      'ipadx' => 0,
      'ipady' => 0,
      'padx' => 0,
      'pady' => 0,
      'rowspan' => 1,
      'sticky' => "ew"
    )
    end


    @_button_1.grid(
      'in'     => @root,
      'column' => 4,
      'row'    => 8,
      'columnspan' => 1,
      'ipadx' => 0,
      'ipady' => 0,
      'padx' => 0,
      'pady' => 0,
      'rowspan' => 1,
      'sticky' => "ew"
    )
    @_button_2.grid(
      'in'     => @root,
      'column' => 5,
      'row'    => 8,
      'columnspan' => 1,
      'ipadx' => 0,
      'ipady' => 0,
      'padx' => 0,
      'pady' => 0,
      'rowspan' => 1,
      'sticky' => "ew"
    )
    @_label_2.grid(
      'in'     => @root,
      'column' => 2,
      'row'    => 2,
      'columnspan' => 1,
      'ipadx' => 0,
      'ipady' => 0,
      'padx' => 0,
      'pady' => 0,
      'rowspan' => 1,
      'sticky' => "e"
    )
    @_label_3.grid(
      'in'     => @root,
      'column' => 2,
      'row'    => 3,
      'columnspan' => 1,
      'ipadx' => 0,
      'ipady' => 0,
      'padx' => 0,
      'pady' => 0,
      'rowspan' => 1,
      'sticky' => "e"
    )
    @_label_4.grid(
      'in'     => @root,
      'column' => 2,
      'row'    => 4,
      'columnspan' => 1,
      'ipadx' => 0,
      'ipady' => 0,
      'padx' => 0,
      'pady' => 0,
      'rowspan' => 1,
      'sticky' => "e"
    )
    @_label_5.grid(
      'in'     => @root,
      'column' => 2,
      'row'    => 5,
      'columnspan' => 1,
      'ipadx' => 0,
      'ipady' => 0,
      'padx' => 0,
      'pady' => 0,
      'rowspan' => 1,
      'sticky' => "e"
    )
    if( not mode == "delete")

    @_label_6.grid(
      'in'     => @root,
      'column' => 2,
      'row'    => 6,
      'columnspan' => 1,
      'ipadx' => 0,
      'ipady' => 0,
      'padx' => 0,
      'pady' => 0,
      'rowspan' => 1,
      'sticky' => "e"
    )
    @_label_7.grid(
      'in'     => @root,
      'column' => 2,
      'row'    => 7,
      'columnspan' => 1,
      'ipadx' => 0,
      'ipady' => 0,
      'padx' => 0,
      'pady' => 0,
      'rowspan' => 1,
      'sticky' => "e"
    )
    end


    # Resize Behavior
    TkGrid.rowconfigure(@root, 1, 'weight' => 0, 'minsize' => 40, 'pad' => 0)
    TkGrid.rowconfigure(@root, 2, 'weight' => 0, 'minsize' => 40, 'pad' => 0)
    TkGrid.rowconfigure(@root, 3, 'weight' => 0, 'minsize' => 30, 'pad' => 0)
    TkGrid.rowconfigure(@root, 4, 'weight' => 0, 'minsize' => 32, 'pad' => 0)
    TkGrid.rowconfigure(@root, 5, 'weight' => 0, 'minsize' => 33, 'pad' => 0)
    TkGrid.rowconfigure(@root, 6, 'weight' => 0, 'minsize' => 31, 'pad' => 0)
    TkGrid.rowconfigure(@root, 7, 'weight' => 0, 'minsize' => 29, 'pad' => 0)
    TkGrid.rowconfigure(@root, 8, 'weight' => 0, 'minsize' => 40, 'pad' => 0)
    TkGrid.rowconfigure(@root, 9, 'weight' => 0, 'minsize' => 13, 'pad' => 0)
    TkGrid.columnconfigure(@root, 1, 'weight' => 0, 'minsize' => 25, 'pad' => 0)
    TkGrid.columnconfigure(@root, 2, 'weight' => 0, 'minsize' => 75, 'pad' => 0)
    TkGrid.columnconfigure(@root, 3, 'weight' => 0, 'minsize' => 235, 'pad' => 0)
    TkGrid.columnconfigure(@root, 4, 'weight' => 0, 'minsize' => 55, 'pad' => 0)
    TkGrid.columnconfigure(@root, 5, 'weight' => 0, 'minsize' => 71, 'pad' => 0)
    TkGrid.columnconfigure(@root, 6, 'weight' => 0, 'minsize' => 37, 'pad' => 0)
  end
end

